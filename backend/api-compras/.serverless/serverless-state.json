{
  "service": {
    "service": "api-compras",
    "serviceObject": {
      "name": "api-compras"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.12",
      "role": "arn:aws:iam::633777173661:role/LabRole",
      "region": "us-east-1",
      "environment": {
        "PYTHONPATH": "src/",
        "DYNAMODB_TABLE_PURCHASES": "dev-t-purchases",
        "JWT_SECRET": "your-jwt-secret"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:*"
              ],
              "Resource": [
                "arn:aws:dynamodb:us-east-1:*:table/dev-t-purchases",
                "arn:aws:dynamodb:us-east-1:*:table/dev-t-purchases/index/*"
              ]
            }
          ]
        }
      },
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "RegisterPurchaseLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-compras-dev-registerPurchase"
            }
          },
          "ListPurchasesLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-compras-dev-listPurchases"
            }
          },
          "RegisterPurchaseLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-25e441ba-ae69",
                "S3Key": "serverless/api-compras/dev/1752692438663-2025-07-16T19:00:38.663Z/api-compras.zip"
              },
              "Handler": "src/register_purchase.lambda_handler",
              "Runtime": "python3.12",
              "FunctionName": "api-compras-dev-registerPurchase",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PYTHONPATH": "src/",
                  "DYNAMODB_TABLE_PURCHASES": "dev-t-purchases",
                  "JWT_SECRET": "your-jwt-secret"
                }
              },
              "Role": "arn:aws:iam::633777173661:role/LabRole"
            },
            "DependsOn": [
              "RegisterPurchaseLogGroup"
            ]
          },
          "ListPurchasesLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-framework-deployments-us-east-1-25e441ba-ae69",
                "S3Key": "serverless/api-compras/dev/1752692438663-2025-07-16T19:00:38.663Z/api-compras.zip"
              },
              "Handler": "src/list_purchases.lambda_handler",
              "Runtime": "python3.12",
              "FunctionName": "api-compras-dev-listPurchases",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PYTHONPATH": "src/",
                  "DYNAMODB_TABLE_PURCHASES": "dev-t-purchases",
                  "JWT_SECRET": "your-jwt-secret"
                }
              },
              "Role": "arn:aws:iam::633777173661:role/LabRole"
            },
            "DependsOn": [
              "ListPurchasesLogGroup"
            ]
          },
          "RegisterPurchaseLambdaVersionGobobLjRfd4iy95ZAN9vQRVIHTiQN43CKOYNNwk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "RegisterPurchaseLambdaFunction"
              },
              "CodeSha256": "HWRXb2Vs97HcN6wq8CddfU6FwfXtgjq3mVJG+LXBOVE="
            }
          },
          "ListPurchasesLambdaVersionEXGK0I786CObbRkoCuUrlrsGgSaYNeGfXIgw8JgBjs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ListPurchasesLambdaFunction"
              },
              "CodeSha256": "HWRXb2Vs97HcN6wq8CddfU6FwfXtgjq3mVJG+LXBOVE="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-api-compras",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourcePurchases": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "purchases",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePurchasesRegister": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePurchases"
              },
              "PathPart": "register",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePurchasesList": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePurchases"
              },
              "PathPart": "list",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPurchasesRegisterOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,POST'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePurchasesRegister"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPurchasesListOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent,X-Amzn-Trace-Id'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourcePurchasesList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPurchasesRegisterPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePurchasesRegister"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "RegisterPurchaseLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "RegisterPurchaseLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPurchasesListGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePurchasesList"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ListPurchasesLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "ListPurchasesLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1752692424869": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodPurchasesRegisterOptions",
              "ApiGatewayMethodPurchasesListOptions",
              "ApiGatewayMethodPurchasesRegisterPost",
              "ApiGatewayMethodPurchasesListGet"
            ]
          },
          "RegisterPurchaseLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "RegisterPurchaseLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ListPurchasesLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ListPurchasesLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PurchasesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "dev-t-purchases",
              "AttributeDefinitions": [
                {
                  "AttributeName": "tenant_id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "purchase_id",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "purchaseDate",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "tenant_id",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "purchase_id",
                  "KeyType": "RANGE"
                }
              ],
              "BillingMode": "PAY_PER_REQUEST",
              "GlobalSecondaryIndexes": [
                {
                  "IndexName": "PurchasesByDateIndex",
                  "KeySchema": [
                    {
                      "AttributeName": "tenant_id",
                      "KeyType": "HASH"
                    },
                    {
                      "AttributeName": "purchaseDate",
                      "KeyType": "RANGE"
                    }
                  ],
                  "Projection": {
                    "ProjectionType": "ALL"
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-framework-deployments-us-east-1-25e441ba-ae69",
            "Export": {
              "Name": "sls-api-compras-dev-ServerlessDeploymentBucketName"
            }
          },
          "RegisterPurchaseLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "RegisterPurchaseLambdaVersionGobobLjRfd4iy95ZAN9vQRVIHTiQN43CKOYNNwk"
            },
            "Export": {
              "Name": "sls-api-compras-dev-RegisterPurchaseLambdaFunctionQualifiedArn"
            }
          },
          "ListPurchasesLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ListPurchasesLambdaVersionEXGK0I786CObbRkoCuUrlrsGgSaYNeGfXIgw8JgBjs"
            },
            "Export": {
              "Name": "sls-api-compras-dev-ListPurchasesLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-api-compras-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "pythonRequirements": {
        "dockerizePip": true,
        "fileName": "requirements.txt"
      }
    },
    "plugins": [
      "serverless-dotenv-plugin",
      "serverless-python-requirements"
    ],
    "pluginsData": {},
    "functions": {
      "registerPurchase": {
        "handler": "src/register_purchase.lambda_handler",
        "events": [
          {
            "http": {
              "path": "purchases/register",
              "method": "post",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "POST"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-compras-dev-registerPurchase",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.12",
        "vpc": {},
        "versionLogicalId": "RegisterPurchaseLambdaVersionGobobLjRfd4iy95ZAN9vQRVIHTiQN43CKOYNNwk"
      },
      "listPurchases": {
        "handler": "src/list_purchases.lambda_handler",
        "events": [
          {
            "http": {
              "path": "purchases/list",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent",
                  "X-Amzn-Trace-Id"
                ],
                "allowCredentials": false
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "api-compras-dev-listPurchases",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.12",
        "vpc": {},
        "versionLogicalId": "ListPurchasesLambdaVersionEXGK0I786CObbRkoCuUrlrsGgSaYNeGfXIgw8JgBjs"
      }
    },
    "resources": {
      "Resources": {
        "PurchasesTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "dev-t-purchases",
            "AttributeDefinitions": [
              {
                "AttributeName": "tenant_id",
                "AttributeType": "S"
              },
              {
                "AttributeName": "purchase_id",
                "AttributeType": "S"
              },
              {
                "AttributeName": "purchaseDate",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "tenant_id",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "purchase_id",
                "KeyType": "RANGE"
              }
            ],
            "BillingMode": "PAY_PER_REQUEST",
            "GlobalSecondaryIndexes": [
              {
                "IndexName": "PurchasesByDateIndex",
                "KeySchema": [
                  {
                    "AttributeName": "tenant_id",
                    "KeyType": "HASH"
                  },
                  {
                    "AttributeName": "purchaseDate",
                    "KeyType": "RANGE"
                  }
                ],
                "Projection": {
                  "ProjectionType": "ALL"
                }
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless",
    "initialServerlessConfig": {
      "org": "elicervantess",
      "service": "api-compras",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "package": {
        "exclude": [
          "__pycache__/**",
          "venv/**"
        ],
        "artifactsS3KeyDirname": "serverless/api-compras/dev/code-artifacts",
        "deploymentBucket": "serverless-framework-deployments-us-east-1-25e441ba-ae69",
        "artifact": "/home/ubuntu/cloud-project-final/backend/api-compras/.serverless/api-compras.zip",
        "artifactDirectoryName": "serverless/api-compras/dev/1752692438663-2025-07-16T19:00:38.663Z"
      }
    },
    "appId": null,
    "org": "elicervantess",
    "orgId": null,
    "layers": {},
    "artifact": "/home/ubuntu/cloud-project-final/backend/api-compras/.serverless/api-compras.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/api-compras/dev/1752692438663-2025-07-16T19:00:38.663Z",
    "artifact": "api-compras.zip"
  }
}
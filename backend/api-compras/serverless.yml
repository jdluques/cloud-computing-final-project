org: elicervantess
service: api-compras

provider:
  name: aws
  runtime: python3.12
  role: arn:aws:iam::633777173661:role/LabRole
  region: us-east-1
  environment:
    PYTHONPATH: src/
    DYNAMODB_TABLE_PURCHASES: ${sls:stage}-t-purchases
    JWT_SECRET: ${env:JWT_SECRET}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:*
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${sls:stage}-t-purchases"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${sls:stage}-t-purchases/index/*"

plugins:
  - serverless-dotenv-plugin
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    fileName: requirements.txt

functions:
  registerPurchase:
    handler: src/register_purchase.lambda_handler
    events:
      - http:
          path: purchases/register
          method: post
          cors: true

  listPurchases:
    handler: src/list_purchases.lambda_handler
    events:
      - http:
          path: purchases/list
          method: get
          cors: true

resources:
  Resources:
    PurchasesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${sls:stage}-t-purchases
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: purchase_id
            AttributeType: S
          - AttributeName: purchaseDate
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: purchase_id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: PurchasesByDateIndex
            KeySchema:
              - AttributeName: tenant_id
                KeyType: HASH
              - AttributeName: purchaseDate
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

package:
  exclude:
    - __pycache__/**
    - venv/**

org: elicervantess
service: api-compras

provider:
  name: aws
  runtime: python3.12
  region: us-east-1
  role: arn:aws:iam::633777173661:role/LabRole
  environment:
    PYTHONPATH: src/
    JWT_SECRET: ${env:JWT_SECRET}
    DYNAMODB_TABLE_PURCHASES: ${sls:stage}-t-purchases

plugins:
  - serverless-dotenv-plugin
  - serverless-python-requirements
  - serverless-openapi-documentation
  - serverless-offline

custom:
  pythonRequirements:
    dockerizePip: true
    fileName: requirements.txt

#API Documentation Swagger
  documentation:
    version: "1.0.0"
    title: API Compras
    description: API para listar y registrar compras
    models:
      Product:
        type: object
        properties:
          product_id:
            type: string
            description: ID del producto
          quantity:
            type: integer
            description: Cantidad solicitada
        required:
          - product_id
          - quantity
        example:
          product_id: "abc123"
          quantity: 2

      Purchase:
        type: object
        properties:
          tenant_id:
            type: string
            description: ID del tenant
          purchase_id:
            type: string
            description: ID de la compra
          user_id:
            type: string
            description: ID del usuario que compró
          products:
            type: array
            items:
              $ref: '#/components/schemas/Product'
          total_price:
            type: number
            description: Precio total de la compra
          purchase_date:
            type: string
            format: date-time
            description: Fecha ISO de la compra
          purchaseDate:
            type: string
            format: date-time
            description: Mismo valor que purchase_date (GSI)
        required:
          - tenant_id
          - purchase_id
          - user_id
          - products
          - total_price
          - purchase_date
          - purchaseDate
        example:
          tenant_id: "dev"
          purchase_id: "550e8400-e29b-41d4-a716-446655440000"
          user_id: "user789"
          products:
            - product_id: "abc123"
              quantity: 2
          total_price: 199.90
          purchase_date: "2025-07-19T23:45:00Z"
          purchaseDate: "2025-07-19T23:45:00Z"

      PurchaseListResponse:
        type: object
        properties:
          purchases:
            type: array
            items:
              $ref: '#/components/schemas/Purchase'
          lastEvaluatedKey:
            type: object
            properties:
              tenant_id:
                type: string
              purchase_id:
                type: string
              purchaseDate:
                type: string
                format: date-time
            required:
              - tenant_id
              - purchase_id
              - purchaseDate
          message:
            type: string
        example:
          purchases:
            - tenant_id: "dev"
              purchase_id: "550e8400-e29b-41d4-a716-446655440000"
              user_id: "user789"
              products:
                - product_id: "abc123"
                  quantity: 2
              total_price: 199.90
              purchase_date: "2025-07-19T23:45:00Z"
              purchaseDate: "2025-07-19T23:45:00Z"
          lastEvaluatedKey:
            tenant_id: "dev"
            purchase_id: "550e8400-e29b-41d4-a716-446655440001"
            purchaseDate: "2025-07-19T23:40:00Z"
          message: "Purchases listed successfully"

      PurchaseRegisterRequest:
        type: object
        properties:
          products:
            type: array
            items:
              $ref: '#/components/schemas/Product'
          totalPrice:
            type: number
        required:
          - products
          - totalPrice
        example:
          products:
            - product_id: "abc123"
              quantity: 2
          totalPrice: 199.90

      PurchaseRegisterResponse:
        type: object
        properties:
          message:
            type: string
          purchaseId:
            type: string
        example:
          message: "Purchase registered successfully"
          purchaseId: "550e8400-e29b-41d4-a716-446655440000"
#API Documentation Swagger


functions:
  list_purchases:
    handler: src.list_purchases.lambda_handler
    events:
      - http:
          path: purchases
          method: get

#API Documentation Swagger
    documentation:
      summary: "Listar compras"
      description: "Recupera compras paginadas para el usuario autenticado"
      tags:
        - Compras
      requestHeaders:
        - name: Authorization
          description: "JWT Bearer token"
          required: true
      queryParams:
        - name: limit
          description: "Número máximo de registros a devolver"
          required: false
          schema:
            type: integer
            default: 10
        - name: lastEvaluatedKey
          description: "Cursor para paginación"
          required: false
          schema:
            type: string
      responses:
        - statusCode: 200
          description: "OK"
          bodyType: PurchaseListResponse
        - statusCode: 500
          description: "Error interno"
#API Documentation Swagger



  register_purchase:
    handler: src.register_purchase.lambda_handler
    events:
      - http:
          path: purchases
          method: post

#API Documentation Swagger
    documentation:
      summary: "Registrar compra"
      description: "Crea una nueva compra para el usuario autenticado"
      tags:
        - Compras
      requestHeaders:
        - name: Authorization
          description: "JWT Bearer token"
          required: true
      requestBody:
        description: "Datos de la compra"
        contentType: "application/json"
        schema:
          $ref: "#/components/schemas/PurchaseRegisterRequest"
      responses:
        - statusCode: 200
          description: "Compra registrada"
          bodyType: PurchaseRegisterResponse
        - statusCode: 500
          description: "Error interno"
#API Documentation Swagger

resources:
  Resources:
    PurchasesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.stage}-t-purchases
        AttributeDefinitions:
          - AttributeName: "tenant_id"
            AttributeType: "S"
          - AttributeName: "purchase_id"
            AttributeType: "S"
          - AttributeName: "purchaseDate"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "tenant_id"
            KeyType: "HASH"
          - AttributeName: "purchase_id"
            KeyType: "RANGE"
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: "ComprasPorFechaIndex"
            KeySchema:
              - AttributeName: "tenant_id"
                KeyType: "HASH"
              - AttributeName: "purchaseDate"
                KeyType: "RANGE"
            Projection:
              ProjectionType: "ALL"

package:
  exclude:
    - __pycache__/**
    - venv/**

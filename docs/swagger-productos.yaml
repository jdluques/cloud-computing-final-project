openapi: 3.0.0
info:
  title: API Productos
  version: 1.0.0
  description: >
    API multi-tenant para gestionar productos.
    Protegida con token JWT en el header `Authorization`.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

paths:
  /products:
    get:
      summary: Listar productos (paginado)
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
        - in: query
          name: lastKey
          schema:
            type: string
        - in: query
          name: global
          schema:
            type: string
            enum: ["true", "false"]
            default: "false"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de productos
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  lastKey:
                    type: string
                    nullable: true
                    example: '{"tenant_id":"PER","productId":"uuid"}'
    post:
      summary: Crear producto
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '200':
          description: Producto creado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product created successfully!"
                  product:
                    $ref: '#/components/schemas/Product'
        '400':
          description: Error de validación

  /products/{productId}:
    get:
      summary: Buscar producto por código
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: string
        - in: query
          name: global
          schema:
            type: string
            enum: ["true", "false"]
            default: "false"
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado
    put:
      summary: Modificar producto
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '200':
          description: Producto modificado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product updated successfully!"
                  product:
                    $ref: '#/components/schemas/Product'
        '401':
          description: No autorizado
        '404':
          description: Producto no encontrado
    delete:
      summary: Eliminar producto
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Producto eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product deleted successfully!"
        '401':
          description: No autorizado
        '404':
          description: Producto no encontrado

components:
  schemas:
    ProductInput:
      type: object
      required:
        - name
        - description
        - price
        - stock
        - categories
      properties:
        name:
          type: string
          example: "Laptop HP"
        description:
          type: string
          example: "Intel i7, 16GB RAM"
        price:
          type: number
          example: 2500.00
        stock:
          type: integer
          example: 10
        categories:
          type: array
          items:
            type: string
          example: ["Electronics"]

    Product:
      type: object
      properties:
        tenant_id:
          type: string
          example: "PER"
        user_id:
          type: string
          example: "uuid-user"
        productId:
          type: string
          example: "uuid-product"
        globalProductId:
          type: string
          example: "PER#uuid-product"
        name:
          type: string
        description:
          type: string
        price:
          type: number
        stock:
          type: integer
        categories:
          type: array
          items:
            type: string
          example: ["Electronics"]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        createdBy:
          type: string
          example: "user@example.com"
